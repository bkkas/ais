# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:

  # Workflow triggers when the tests are successful and pushed on main
  workflow_run:
    workflows: [Python Package Test]
    types: [completed]
    branches: ["main"]

permissions:
  contents: read

jobs:
  deploy:

    # Only run job is the Python Package Test workflow was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

      # Consider getting dependencies from requirements.txt file
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Building
    - name: Build package
      run: python -m build

      # Publishing to testPyPI
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TESTPYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

        # For debugging purposes
        verbose: true


  deploy-on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'